from aiogram.dispatcher.filters import Text
from aiogram.types import Message
from aiogram.contrib.middlewares.fsm import FSMContext

from loader import dp, db
from tools import permissions
from states.admin.courses import CoursesState
from keyboards.default import cancel_btn, admin


@dp.message_handler(Text("üñã –î–æ–±–∞–≤–∏—Ç—å –∫—É—Ä—Å"))
async def course_add_state_start(message: Message):
    if permissions.is_admin(message.from_user.id) and permissions.private_chat(message):
        await CoursesState.name.set()
        await message.answer("<b>–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫—É—Ä—Å–∞</b>", reply_markup=cancel_btn.generate_cancel_btn())


@dp.message_handler(state=CoursesState.name)
async def save_course_name(message: Message, state: FSMContext):
    async with state.proxy() as data:
        data['name'] = message.text
    await CoursesState.next()
    await message.answer("<b>–û—Ç–ø—Ä–∞–≤—å—Ç–µ –∫—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –∫—É—Ä—Å–∞ ( –ö—Ä–∞—Ç–∫–∏–π –ø–ª–∞–Ω –æ–±—É—á–µ–Ω–∏—è, —á—Ç–æ –º–æ–∂–µ—Ç —Å–¥–µ–ª–∞—Ç—å "
                         "—Å—Ç—É–¥–µ–Ω—Ç –∞–∫–∞–¥–µ–º–∏–∏ –ø–æ –æ–∫–∞–Ω—á–∞–Ω–∏—é –∫—É—Ä—Å–∞, –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∏ —Å—Ç–æ–∏–º–æ—Å—Ç—å –∫—É—Ä—Å–∞ –≤ –∫–æ–Ω—Ü–µ )</b>",
                         reply_markup=cancel_btn.generate_cancel_btn())


@dp.message_handler(state=CoursesState.desc)
async def save_course_description(message: Message, state: FSMContext):
    async with state.proxy() as data:
        data['desc'] = message.text
        name = data['name'].replace(' ', '_').lower()
        with open(file=f'media/courses-info/{name}.txt', mode='w', encoding='utf-8') as file:
            file.write(data['desc'])
    await CoursesState.next()
    await message.answer('<b>–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ ( –ª–æ–≥–æ—Ç–∏–ø ) –¥–ª—è –∫—É—Ä—Å–∞ c —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ–º "JPG"</b>',
                         reply_markup=cancel_btn.generate_cancel_btn())


@dp.message_handler(state=CoursesState.image_path, content_types='photo')
async def save_course_photo(message: Message, state: FSMContext):
    async with state.proxy() as data:
        name = data['name'].replace(' ', '_').lower()
        data['image_path'] = f"media/courses-logo/{name}.jpg"
        await message.photo[-1].download(destination_file=f'media/courses-logo/{name}.jpg')
        try:
            db.register_course(data['name'], f'media/courses-info/{name}.txt', data['image_path'])
            await message.answer("<b>–ö—É—Ä—Å —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω !</b>",
                                 reply_markup=admin.admin_menu.generate_admin_main_menu())
        except:
            await message.answer("<b>–ö—É—Ä—Å —Å —Ç–∞–∫–∏–º –Ω–∞–∑–≤–∞–Ω–∏–µ–º —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç !</b>",
                                 reply_markup=admin.admin_menu.generate_admin_main_menu())
    await state.finish()
