from aiogram.dispatcher.filters import Text
from aiogram.contrib.middlewares.fsm import FSMContext
from aiogram.types import Message, InlineKeyboardMarkup, InlineKeyboardButton, CallbackQuery

from loader import dp, db
from states.admin.groups import GroupAddState
from keyboards.default.cancel_btn import generate_cancel_btn
from keyboards.default.admin.admin_menu import generate_admin_main_menu
from tools.permissions import is_admin, private_chat
from tools.weekdays_converter import convert_weekdays


@dp.message_handler(Text("üñã –î–æ–±–∞–≤–∏—Ç—å –≥—Ä—É–ø–ø—É"))
async def group_state_start(message: Message):
    if private_chat(message) and is_admin(message.from_user.id):
        await message.answer("<b>–í–≤–µ–¥–∏—Ç–µ ID –≥—Ä—É–ø–ø—ã, –≤—ã –º–æ–∂–µ—Ç–µ —É–∑–Ω–∞—Ç—å –µ—ë –æ—Ç–ø—Ä–∞–≤–∏–≤ –∫–æ–º–∞–Ω–¥—É /id –≤ —ç—Ç—É –≥—Ä—É–ø–ø—É, "
                             "–Ω–æ —Å–Ω–∞—á–∞–ª–∞ —É–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –±–æ—Ç –¥–æ–±–∞–≤–ª–µ–Ω –≤ –≥—Ä—É–ø–ø—É –∏ —è–≤–ª—è–µ—Ç—Å—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º</b>",
                             reply_markup=generate_cancel_btn())
        await GroupAddState.group_id.set()


@dp.message_handler(state=GroupAddState.group_id)
async def save_group_id(message: Message, state: FSMContext):
    await state.update_data(group_id=int(message.text))
    await GroupAddState.next()
    await message.answer("<b>–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã, –Ω–∞–ø—Ä–∏–º–µ—Ä: <i>Backend —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞ Python</i></b>",
                         reply_markup=generate_cancel_btn())


@dp.message_handler(state=GroupAddState.group_name)
async def save_group_name(message: Message, state: FSMContext):
    await state.update_data(group_name=message.text)
    await GroupAddState.next()
    await message.answer("<b>–í–≤–µ–¥–∏—Ç–µ –¥–Ω–∏ –∑–∞–Ω—è—Ç–∏–π –≤ —á–∏—Å–ª–æ–≤–æ–º —Ñ–æ—Ä–º–∞—Ç–µ, –Ω–∞–ø—Ä–∏–º–µ—Ä: 1,2,3\n"
                         "<i>1-–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫</i>\n"
                         "<i>2-–í—Ç–æ—Ä–Ω–∏–∫</i>\n"
                         "<i>3-–°—Ä–µ–¥–∞</i>\n"
                         "<i>4-–ß–µ—Ç–≤–µ—Ä–≥</i>\n"
                         "<i>5-–ü—è—Ç–Ω–∏—Ü–∞</i>\n"
                         "<i>6-–°—É–±–±–æ—Ç–∞</i>\n"
                         "<i>7-–í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ</i>\n"
                         "1,3,5 --> –ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫, –°—Ä–µ–¥–∞, –ü—è—Ç–Ω–∏—Ü–∞</b>", reply_markup=generate_cancel_btn())


@dp.message_handler(state=GroupAddState.lesson_days)
async def save_lesson_days(message: Message, state: FSMContext):
    await state.update_data(lesson_days=message.text)
    await GroupAddState.next()
    await message.answer("<b>–í–≤–µ–¥–∏—Ç–µ –≤—Ä–µ–º—è –∑–∞–Ω—è—Ç–∏–π, –Ω–∞–ø—Ä–∏–º–µ—Ä: 14:00</b>", reply_markup=generate_cancel_btn())


@dp.message_handler(state=GroupAddState.lesson_time)
async def save_lesson_time(message: Message, state: FSMContext):
    async with state.proxy() as data:
        data['lesson_time'] = message.text
        lesson_days = ",".join(
            convert_weekdays([int(day) for day in data['lesson_days'].split(',') if day.strip().isdigit()]))
        msg = f"–ù–∞–∑–≤–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã: <b><i>{data['group_name']}</i></b>\n" \
              f"ID –≥—Ä—É–ø–ø—ã: <code>{data['group_id']}</code>\n" \
              f"–î–Ω–∏ –∑–∞–Ω—è—Ç–∏–π: <b><i>{lesson_days}</i></b>\n" \
              f"–í—Ä–µ–º—è –∑–∞–Ω—è—Ç–∏–π: <b><i>{data['lesson_time']}</i></b>"
    markup = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="‚úÖ –î–∞", callback_data="group-save:1"),
         InlineKeyboardButton(text="‚ùå –ù–µ—Ç", callback_data="group-save:0")]
    ])
    await message.answer(f"{msg}\n\n<b>–í—Å–µ –ª–∏ –¥–∞–Ω–Ω—ã–µ –≤–µ—Ä–Ω—ã ?</b>", reply_markup=markup)
    await GroupAddState.next()


@dp.callback_query_handler(state=GroupAddState.confirmation)
async def save_or_not_group_info(call: CallbackQuery, state: FSMContext):
    if int(call.data.split(":")[1]) == 1:
        async with state.proxy() as data:
            group_id = data['group_id']
            group_name = data['group_name']
            lesson_days = data['lesson_days']
            lesson_time = data['lesson_time']
            try:
                db.register_group(group_id, group_name, lesson_days, lesson_time)
                await call.message.answer(f"<b>–ì—Ä—É–ø–ø–∞ <i>{data['group_name']}</i> –¥–æ–±–∞–≤–ª–µ–Ω–∞ !</b>",
                                          reply_markup=generate_admin_main_menu())
            except:
                await call.message.answer("<b>–ì—Ä—É–ø–ø–∞ —Å —Ç–∞–∫–∏–º ID —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç !</b>",
                                          reply_markup=generate_admin_main_menu())
        await state.finish()
        await call.message.delete()
    else:
        await state.finish()
        await call.message.answer("–î–µ–π—Å—Ç–≤–∏—è –æ—Ç–º–µ–Ω–µ–Ω—ã ‚úÖ", reply_markup=generate_admin_main_menu())
        await call.message.delete()
