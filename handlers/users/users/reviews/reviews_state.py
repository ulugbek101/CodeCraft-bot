from aiogram.contrib.middlewares.fsm import FSMContext

from data.config import ADMINS
from keyboards.default.cancel_btn import generate_cancel_btn
from states.users.reviews import ReviewState
from aiogram.dispatcher.filters import Text
from loader import dp, bot, db
from aiogram.types import Message, CallbackQuery
from tools.permissions import private_chat
from keyboards.default.main_menu import generate_main_menu
from keyboards.inline.admin.review_answer import generate_review_answer_keyboard


@dp.message_handler(Text("üìù –û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤"))
async def review_state_start(message: Message):
    if private_chat(message):
        await ReviewState.body.set()
        await message.answer("<b>–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ –µ—â—ë —Ä–∞–∑, —Ç—É—Ç –≤—ã –º–æ–∂–µ—Ç–µ –Ω–∞–ø–∏—Å–∞—Ç—å —Å–≤–æ–π –æ—Ç–∑—ã–≤, –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è, –ø–æ–∂–µ–ª–∞–Ω–∏—è. "
                             "–ú—ã –±—É–¥–µ–º –æ—á–µ–Ω—å —Ä–∞–¥—ã —É–∑–Ω–∞—Ç—å –≤–∞—à–µ –º–Ω–µ–Ω–∏–µ üòâ</b>",
                             reply_markup=generate_cancel_btn())


@dp.message_handler(state=ReviewState.body)
async def send_review(message: Message, state: FSMContext):
    await state.update_data(body=message.text)
    review = f"<b>–û—Ç–∑—ã–≤/–ü–æ–∂–µ–ª–∞–Ω–∏–µ:</b>\n\n<b>–û—Ç:</b> <i>{message.from_user.full_name}</i> | {'@' + message.from_user.username if message.from_user.username else '---'}\n"
    review += f"{'-' * 20}\n<i>{message.text}</i>\n{'-' * 20}"
    user_id = int(db.get_user(message.from_user.id)[0])
    for admin in ADMINS:
        try:
            await bot.send_message(admin, review,
                                   reply_markup=generate_review_answer_keyboard("üìù –û—Ç–≤–µ—Ç–∏—Ç—å ...", user_id, 0))
        except:
            pass
    await state.finish()
    await message.answer("<b>–í–∞—à –æ—Ç–∑—ã–≤/–ø–æ–∂–µ–ª–∞–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω(–æ) –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏, –≤ —Å–∫–æ—Ä–æ–º –≤—Ä–µ–º–µ–Ω–∏ –º—ã –≤–∞–º –æ—Ç–≤–µ—Ç–∏–º üòâ</b>",
                         reply_markup=generate_main_menu())
